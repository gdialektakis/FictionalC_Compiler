program foo;

type
   my_function_new=function( k : integer; n: integer): integer ;
   string = array of char;
var 
    my_var: boolean;
    my_array : array[5] of integer;
    my_array1: array[2][5] of integer;
    i,k,l,m,n : integer ;
    c: char;
    
procedure my_procedure( k : integer; n: integer) ;
begin
    n:=20;
    i:=10;
    while ( k<15 and n>0 ) do
    begin
      writeString ("lets make a procedure");
      writeInteger (n);
      n := n-1 
    end;
  printf("Lets finish the procedure")
end ;
	
function my_function_new( k : integer; n: integer) : integer ;
begin
  repeat begin
        if k+n > 10 and k+n<20 then
            begin
            if k>4 then
                writeInteger(k)
            else
               writeInteger(n)
            end
    end
    until i+j>6
end;

function compute(n : integer; my_array1: array[2][5] of integer; my_array : array[5] of integer) :integer ;
var j, i: integer;
  my_array2: array [5] of integer;
  procedure my_procedure(my_array : array[5] of integer; k : integer);
  var 
     n : integer;
  begin
    my_array[4]:= 5;
    my_array1[1][3]:=15;
    writeString ('lets call a procedure')
  end;

begin
    n:=4;
    if n > 3 and my_var=true then
      begin
      for i:=10 downto 1 do
      begin
          my_array[i]:= i+2; 
          printf(my_array[i])
      end;
        n:=n-1;
        my_procedure(my_array2,n); 
        result:= 10
      end

end;


function my_function(my_string: string ; val: integer; c : char):  boolean;
begin
  c:=b;
  writeString(my_string); 
 if c <> 'a' and val<10 then
 begin
  val:=4;
  c:= (char) val;
  readString('my_string');
  val:=compute(n, my_array1[2][5]);
  result:= false 
  end 
else 
     result:= true;
return
end; 

begin
  m:=50;
 for i:=0 to m do
  begin 
       for l:=5 to 100 do  
            my_array1[i][l]:= 0
  end 
end.

